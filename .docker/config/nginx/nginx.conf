# Generic startup file.
user nginx nginx;

worker_processes auto;
worker_cpu_affinity auto;

error_log /var/log/nginx/error.log;
pid       /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include mime.types;
    default_type       application/octet-stream;
    #access_log         /var/log/nginx/access.log;
    error_log          /var/log/nginx/error.log;

    client_max_body_size 0;
    client_body_buffer_size 1k;
    client_header_buffer_size 1k;
    large_client_header_buffers 1 2k;
    client_body_timeout 60s;
    client_header_timeout 60s;
    keepalive_timeout 60s;
    send_timeout 60s;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    gzip on;

    fastcgi_buffering off;

    index index.php index.html index.htm;

    server {
        listen *:80 default;
        listen [::]:80 default;
        listen *:443 ssl http2;
        listen [::]:443 ssl http2;

        ssl_certificate /certs/domain.crt;
        ssl_certificate_key /certs/domain.key;

        ssl_session_cache shared:SSL:20m;
        ssl_session_timeout 10m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5';

        server_name _;
        root /var/www/html/public;

        index index.php;

        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        location ~*\.(ico|css|js|gif|jpg|jpeg|png|svg|woff|ttf|eot)$ {
            access_log off;
        }

        location ~* ^.+\.(svg|svgz|jpg|jpeg|gif|png|ico|bmp)$ {
            try_files $uri @image_fallback;
        }

        # Uncomment this to enable fetch WP media files from a remote server.
        #location @image_fallback {
            #proxy_pass https://domain.com/$request_uri;
        #}

        # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
        # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
        location ~ /\. {
            deny all;
        }

        # Deny access to any files with a .php extension in the uploads directory
        # Works in sub-directory installs and also in multisite network
        # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
        location ~* /(?:uploads|files)/.*\.php$ {
            deny all;
        }

        location / {
                # This is cool because no php is touched for static content.
                # include the "?$args" part so non-default permalinks doesn't break when using query string
                try_files $uri $uri/ /index.php?$args;
        }

        if (!-e $request_filename) {
            rewrite (/wp-.*) /wp$1 last;
            rewrite (/.*\.php)$ /wp$1 last;
        }

        location ~ \.php$ {
			try_files $uri =404;
			include fastcgi.conf;
			fastcgi_pass php:9000;
            include fastcgi_params;

            fastcgi_buffers 256 48k;
            fastcgi_buffer_size 48k;
            fastcgi_connect_timeout 60s;
            fastcgi_send_timeout 60s;
            fastcgi_read_timeout 60s;
            fastcgi_busy_buffers_size 256k;
            #fastcgi_temp_file_write_size 256k;
            fastcgi_max_temp_file_size 0;
            reset_timedout_connection on;
	    }

        location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
                expires max;
                log_not_found off;
        }
    }

    server {
        server_name mailhog.localhost;
        listen 80;
        listen [::]:80;

        location / {
                proxy_pass          http://mailhog:8025;
                proxy_set_header    Host             $host;
                proxy_set_header    X-Real-IP        $remote_addr;
                proxy_set_header    X-Forwarded-For  $proxy_add_x_forwarded_for;
                proxy_set_header    X-Client-Verify  SUCCESS;
                proxy_set_header    X-Client-DN      $ssl_client_s_dn;
                proxy_set_header    X-SSL-Subject    $ssl_client_s_dn;
                proxy_set_header    X-SSL-Issuer     $ssl_client_i_dn;
                proxy_read_timeout 1800;
                proxy_connect_timeout 1800;
                chunked_transfer_encoding on;
                proxy_set_header X-NginX-Proxy true;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_http_version 1.1;
                proxy_redirect off;
                proxy_buffering off;
        }
    }
}
